unit UDependencyInjection.Tests;
{

  Delphi DUnit Test Case
  ----------------------
  This unit contains a skeleton test case class generated by the Test Case Wizard.
  Modify the generated code to correctly setup and call the methods from the unit
  being tested.

}

interface

uses
  TestFramework, Classes, ServiceContainer;

type
  // Test methods for class TMyClass

  TestTMyClass = class(TTestCase)
  strict private
    FContainer: TServiceContainer;
  public
    procedure SetUp; override;
    procedure TearDown; override;
  published
    procedure ServicesRegisteredWithImplementationTypeCanBeResolved;
  end;

implementation

uses
  DependencyInjection.Tests.Fakes.ITestService, 
  DependencyInjection.Tests.Fakes.TestService;

procedure TestTMyClass.ServicesRegisteredWithImplementationTypeCanBeResolved;
var
  Instance: TObject;
begin
   FContainer.Register(ITestService, TTestService);
   Instance := FContainer.GetInstance(ITestService);
   CheckIs(Instance, TTestService);
end;

procedure TestTMyClass.SetUp;
begin
   FContainer := TServiceContainer.Create;
end;

procedure TestTMyClass.TearDown;
begin
   FContainer.Free;
   FContainer := nil;
end;

initialization
  // Register any test cases with the test runner
  RegisterTest(TestTMyClass.Suite);
end.
